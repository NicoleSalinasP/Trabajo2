package com.aiep.evaluacion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmpleadosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpleadosAllPropertiesEquals(Empleados expected, Empleados actual) {
        assertEmpleadosAutoGeneratedPropertiesEquals(expected, actual);
        assertEmpleadosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpleadosAllUpdatablePropertiesEquals(Empleados expected, Empleados actual) {
        assertEmpleadosUpdatableFieldsEquals(expected, actual);
        assertEmpleadosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpleadosAutoGeneratedPropertiesEquals(Empleados expected, Empleados actual) {
        assertThat(expected)
            .as("Verify Empleados auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpleadosUpdatableFieldsEquals(Empleados expected, Empleados actual) {
        assertThat(expected)
            .as("Verify Empleados relevant properties")
            .satisfies(e -> assertThat(e.getNombresEmpleado()).as("check nombresEmpleado").isEqualTo(actual.getNombresEmpleado()))
            .satisfies(e -> assertThat(e.getApellidoEmpleado()).as("check apellidoEmpleado").isEqualTo(actual.getApellidoEmpleado()))
            .satisfies(e -> assertThat(e.getTelefono()).as("check telefono").isEqualTo(actual.getTelefono()))
            .satisfies(e -> assertThat(e.getCorreo()).as("check correo").isEqualTo(actual.getCorreo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpleadosUpdatableRelationshipsEquals(Empleados expected, Empleados actual) {
        assertThat(expected)
            .as("Verify Empleados relationships")
            .satisfies(e -> assertThat(e.getDeparmento()).as("check deparmento").isEqualTo(actual.getDeparmento()));
    }
}
